/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.10'

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    //this dependecies is for OkHttpClient
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation("org.assertj:assertj-core:3.24.2")
    implementation 'com.github.ben-manes.caffeine:caffeine:3.0.0'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // This dependency is used by Json
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'

    // This dependency is used for the commands
    implementation 'info.picocli:picocli:4.6.1'


    //this 2 dependecies are for javafx
    implementation 'org.openjfx:javafx-controls:17'
    implementation 'org.openjfx:javafx-fxml:17'

    implementation 'org.json:json:20210307'

}


javafx {
    version = "17"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

application {
    // Define the main class for the application.
    mainClass = 'moviesapp.App'
     //mainClass = 'moviesapp.ListMoviesCommand'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


run  {
    standardInput = System.in
    // CL app in intellij console
    jvmArgs = ['-Dprism.order=sw']
}